---
import apexcharts from 'apexcharts';
---

<div class="px-4 pt-6">
	<h2>Nhiệt độ Đà Nẵng gần đây (°C)</h2>
	<div class="p-4 border border-gray-200 rounded-lg shadow-sm dark:border-gray-700 sm:p-6 dark:bg-gray-800">
		<div id="temp-chart"></div>
	</div>
</div>

<script>
	async function fetchData() {
		const response = await fetch('https://raw.githubusercontent.com/your-username/your-repo/main/weather/danang_temp.json');
		return response.json();
	}

	function formatDate(dateStr) {
		const date = new Date(dateStr.slice(0, 4), dateStr.slice(4, 6) - 1, dateStr.slice(6, 8));
		return date.toLocaleDateString('vi-VN', { day: '2-digit', month: 'short' });
	}

	async function renderChart() {
		const data = await fetchData();
		const dates = Object.keys(data).sort().slice(-60);
		const temps = dates.map((date) => parseFloat(data[date]));

		const last30Dates = dates.slice(-30);
		const prev30Dates = dates.slice(-60, -30);
		const last30Temps = temps.slice(-30);
		const prev30Temps = temps.slice(-60, -30);
		const last30Formatted = last30Dates.map(formatDate);
		const prev30Formatted = prev30Dates.map(formatDate);

		const options = {
			chart: {
				height: 420,
				type: 'line',
				foreColor: document.documentElement.classList.contains('dark') ? '#9CA3AF' : '#6B7280',
				toolbar: { show: false },
			},
			series: [
				{
					name: '30 ngày gần nhất',
					data: last30Temps,
					color: '#FF725E',
				},
				{
					name: '30 ngày trước đó',
					data: prev30Temps,
					color: '#3B82F6',
				},
			],
			xaxis: {
				categories: last30Formatted,
				labels: {
					style: {
						colors: document.documentElement.classList.contains('dark') ? '#9CA3AF' : '#6B7280',
						fontWeight: 500,
					},
				},
				axisBorder: {
					color: document.documentElement.classList.contains('dark') ? '#374151' : '#F3F4F6',
				},
				axisTicks: {
					color: document.documentElement.classList.contains('dark') ? '#374151' : '#F3F4F6',
				},
			},
			yaxis: {
				title: { text: 'Nhiệt độ (°C)' },
				labels: {
					style: {
						colors: document.documentElement.classList.contains('dark') ? '#9CA3AF' : '#6B7280',
						fontSize: '14px',
						fontWeight: 500,
					},
					formatter: (value) => `${value.toFixed(1)}°C`,
				},
			},
			stroke: {
				curve: 'smooth',
				width: 2,
			},
			dataLabels: { enabled: false },
			tooltip: {
				style: {
					fontSize: '14px',
					fontFamily: 'Inter, sans-serif',
				},
				x: {
					formatter: (index) => {
						const allDates = [...prev30Formatted, ...last30Formatted];
						return allDates[index - 1] || '';
					},
				},
				y: {
					formatter: (value) => `${value.toFixed(1)}°C`,
				},
			},
			grid: {
				borderColor: document.documentElement.classList.contains('dark') ? '#374151' : '#F3F4F6',
				strokeDashArray: 1,
				padding: { left: 35, bottom: 15 },
			},
			markers: {
				size: 4,
				strokeColors: '#ffffff',
			},
		};

		const chart = new ApexCharts(document.getElementById('temp-chart'), options);
		chart.render();

		document.addEventListener('dark-mode', () => {
			chart.updateOptions(options);
		});
	}

	renderChart();

</script>

<style is:global>

	.apexcharts-tooltip {
		@apply bg-white dark:bg-gray-700 text-gray-500 dark:text-gray-400 border-0 rounded-lg shadow-lg !important;
	}

	.apexcharts-tooltip .apexcharts-tooltip-title {
		@apply py-2 px-4 bg-gray-100 dark:bg-gray-600 border-b border-gray-200 dark:border-gray-500 !important;
	}

	.apexcharts-xaxistooltip {
		@apply text-gray-500 border-0 bg-white dark:bg-gray-700 dark:text-gray-300 rounded-lg shadow-lg !important;
	}

</style>