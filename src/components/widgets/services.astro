---
import type { Content as Props } from '~/types';
import Headline from '~/components/ui/headline.astro';
import Wrapper from '~/components/ui/wrapper.astro';
import Button from '~/components/ui/button.astro';
import Image from '~/components/common/image.astro';
import { Slideup } from '~/assets/framer.jsx';

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	tagline,
	content = await Astro.slots.render('content'),
	callToAction,
	items = [],
	image = await Astro.slots.render('image'),
	isReversed = false,
	id,
	classes = {},
	bg = await Astro.slots.render('bg'),
} = Astro.props;

const getDelay = (index) => (index * 0.15).toFixed(2);
---

<section class="relative md:-mt-[76px] not-prose">

	<div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
	<div class="relative max-w-7xl mx-auto">

		<div class="pt-0 md:pt-[120px] pointer-events-none"></div>

		<Wrapper
			id={id}
			containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`}
			bg={bg}
		>

			<Headline
				title={title}
				subtitle={subtitle}
				tagline={tagline}
				classes={{
					container: 'max-w-xl sm:mx-auto lg:max-w-2xl',
					title: 'text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-6 font-heading',
					subtitle: 'max-w-3xl mx-auto sm:text-center text-xl text-muted ',
				}}
			/>

			<div class="md:mx-auto">
				<div class={`md:flex ${isReversed ? 'md:flex-row-reverse' : ''} md:gap-16`}>
					<div class="md:basis-1/2 self-center">

						{content && <p class="text-xl" set:html={content} />}
						
						{callToAction && <Button class="btn" variant="link" {...callToAction} />}

						{items && items.length > 0 && (
							<div class="mt-10 relative">
								<div class="absolute left-4 top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary to-primary-700 h-full"></div>
								
								{items.map((item, index) => (
									<Slideup client:visible delay={getDelay(index)}>

										<div class="flex mb-8 items-start">

											<div class="flex-shrink-0 bg-primary text-white rounded-full h-8 w-8 flex items-center justify-center mr-4 z-10">

												{item.icon ? (
													<span class={`${item.icon}`}></span>
												) : (
													<span class="text-sm font-bold">{index + 1}</span>
												)}

											</div>

											<div class="p-6 rounded-lg w-full transition-all hover:shadow-lg">

												<h3 class="text-lg font-medium leading-6 mb-2">{item.title}</h3>

												{item.description && <p class="text-muted">{item.description}</p>}

												{item.callToAction && (
													<div class="mt-3">
														<a href={item.callToAction?.href} class="text-primary font-medium hover:underline" target="_blank">
															{item.callToAction?.text}
														</a>
													</div>
												)}

											</div>

										</div>

									</Slideup>
								))}

							</div>
						)}

					</div>

					<div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2">

						{image && (
							<Slideup client:visible delay={0.2}>
								<div class="relative m-auto max-w-4xl">

									{typeof image === 'string' ? (
										<Fragment set:html={image} />
									) : (
										<Image
											class="mx-auto w-full rounded-lg shadow-lg hover:shadow-xl transition-all"
											width={600}
											height={407}
											widths={[400, 768]}
											sizes="(max-width: 768px), 432px"
											layout="responsive"
											{...(image as any)}
										/>
									)}

								</div>
							</Slideup>
						)}

					</div>

				</div>
			</div>

		</Wrapper>

	</div>

</section>