---
import type { Content as Props } from '~/types';
import Headline from '~/components/ui/headline.astro';
import Container from '~/components/ui/container.astro';
import Button from '~/components/ui/button.astro';
import Image from '~/components/common/image.astro';

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	tagline,
	content = await Astro.slots.render('content'),
	callToAction,
	items = [],
	image,
	isReversed = false,
	id,
	classes = {},
	bg = await Astro.slots.render('bg'),
} = Astro.props;

const containerClasses = "max-w-7xl mx-auto";
const contentClasses = "max-w-3xl mx-auto";
---

<section class="relative md:-mt-[76px] not-prose">
	<div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
	<div class={containerClasses}>

		<div class="pt-0 md:pt-[120px] pointer-events-none"></div>

		<Container
			id={id}
			containerClass={`${containerClasses} ${classes?.container ?? ''}`}
			bg={bg}
		>

			<Headline
				title={title}
				subtitle={subtitle}
				tagline={tagline}
				classes={{
					container: 'max-w-xl sm:mx-auto lg:max-w-2xl',
					title: contentClasses,
					subtitle: `${contentClasses} sm:text-center text-2xl text-muted`,
				}}
			/>

			<div class="md:mx-auto">
				<div class={`md:flex ${isReversed ? 'md:flex-row-reverse' : ''} grid gap-6 md:grid-cols-2 lg:grid-cols-2`}>

					<div class="md:basis-1/2">

						{content && <Fragment set:html={content.trim()}/>}

						{callToAction && <Button class="btn" variant="link" {...callToAction}/>}

						{items && items.length > 0 && (
							<div class="mt-10 relative">
								<div class="absolute left-4 top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary to-primary-700 h-full"></div>

								{items.map((item, index) => (
									<div class="flex mb-8 items-start">
										<div class="flex-shrink-0 bg-primary text-white rounded-full h-8 w-8 flex items-center justify-center mr-4 z-10"></div>
										<div class="w-full">

											<h4>{item.title}</h4>

											{item.description && <p>{item.description}</p>}

											{item.callToAction && (
												<div class="mt-3">
													<a href={item.callToAction?.href} class="text-primary" target="_blank">
														{item.callToAction?.text}
													</a> {/* Dùng style từ @layer base a */}
												</div>
											)}

										</div>
									</div>
								))}

							</div>
						)}

					</div>

					<div aria-hidden="true" class="mt-10 md:mt-0 md:basis-1/2">

						{image && (
							<div class="relative m-auto max-w-4xl">
								<Image
									src={typeof image === 'string' ? image : image.src}
									alt={typeof image === 'string' ? 'Văn hay trong hiện tại, chữ tốt ở tương lai.' : image.alt}
									title={typeof image === 'string' ? 'Văn hay trong hiện tại, chữ tốt ở tương lai.' : image.title}
								/>
							</div>
						)}

					</div>

				</div>
			</div>

		</Container>

	</div>
</section>