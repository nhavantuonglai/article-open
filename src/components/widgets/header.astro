---
import { Icon } from "astro-icon/components";
import Logo from "~/assets/logo.astro";
import Button from "~/components/ui/button.astro";
import { getHomePermalink, trimSlash } from "~/utils/permalinks";
import type { CallToAction } from "~/types";

interface Link {
	text?: string;
	href?: string;
	ariaLabel?: string;
	icon?: string;
}

interface ActionLink extends CallToAction {}
interface MenuLink extends Link {
	links?: Array<MenuLink>;
}

export interface Props {
	id?: string;
	links?: Array<MenuLink>;
	actions?: Array<ActionLink>;
	isSticky?: boolean;
	isFullWidth?: boolean;
	position?: string;
}

const {
	id = "header",
	links = [],
	actions = [],
	isFullWidth = false,
	position = "center",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
const baseStyles = "text-xl hover:text-primary px-4 flex items-center";
---

<div class="h-[72px] w-full">

	<header
		class="fixed top-0 left-0 right-0 w-full z-50 transition-opacity border-b border-gray-50/0 backdrop-blur-[5%]"
		{...id ? { id } : {}}
	>

		<div class:list={[
			"relative text-default py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between",
		]}>

			<div class:list={[{ "mr-auto rtl:mr-0 rtl:ml-auto": position === "right" }, "flex justify-between"]}>

				<a class="flex items-center" href={getHomePermalink()}>
					<Logo />
				</a>

			</div>

			<nav class="items-center w-full md:w-auto hidden md:flex text-default" aria-label="navigation">

				<ul class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium">

					{links.map(({ text, href, links }, index) => (
						<li key={index} class={links?.length ? "dropdown" : ""}>
							{links?.length ? (

								<>
									<button class="mb-6 text-muted text-xl hover:text-primary px-4 py-3 flex items-center">
										{text} 
										<Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline" />

									</button>

									<ul class="dropdown-menu md:backdrop-blur-md rounded-lg md:absolute pl-4 md:pl-0 font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
										{links.map(({ text: text2, href: href2 }, subIndex) => (
											<li key={subIndex}>
												<a
													class:list={[
														baseStyles,
														"py-6",
														{ "aw-link-active": href2 === currentPath }
													]}
													href={href2}
												>
													{text2}
												</a>
											</li>
										))}
									</ul>
								</>

							) : (

								<a
									class:list={[
										baseStyles,
										"py-3",
										{ "aw-link-active": href === currentPath }
									]}
									href={href}
									target="_blank"
								>
									{text}
								</a>

							)}

						</li>
					))}

				</ul>

			</nav>
			
			{actions?.length && (

				<div class:list={[
					{ "ml-auto rtl:ml-0 rtl:mr-auto": position === "left" },
					"hidden md:flex"
				]}>

					<span class="ml-4 rtl:ml-0 rtl:mr-4">
						{actions.map((btnProps, index) => (
							<Button key={index} {...btnProps} />
						))}
					</span>

				</div>

			)}

		</div>

	</header>

</div>

<style>

	.dropdown-menu {
		@apply hidden absolute;
	}

	.dropdown:hover .dropdown-menu {
		@apply block;
	}

</style>