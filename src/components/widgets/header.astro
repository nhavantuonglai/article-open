---
import { Icon } from "astro-icon/components";
import Logo from "~/assets/logo.astro";
import ToggleTheme from "~/components/common/toggle-theme.astro";
import ToggleMenu from "~/components/common/toggle-menu.astro";
import Button from "~/components/ui/button.astro";

import { getHomePermalink } from "~/utils/permalinks";
import { trimSlash, getAsset } from "~/utils/permalinks";
import type { CallToAction } from "~/types";

interface Link {
	text?: string;
	href?: string;
	ariaLabel?: string;
	icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
	links?: Array<MenuLink>;
}

export interface Props {
	id?: string;
	links?: Array<MenuLink>;
	actions?: Array<ActionLink>;
	isSticky?: boolean;
	isDark?: boolean;
	isFullWidth?: boolean;
	showToggleTheme?: boolean;
	showRssFeed?: boolean;
	position?: string;
}

const {
	id = "header",
	links = [],
	actions = [],
	isSticky = false,
	isDark = false,
	isFullWidth = false,
	showToggleTheme = false,
	showRssFeed = false,
	position = "center",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`
---

<div class="h-[72px] w-full">

	<header

		class:list={[
			"fixed top-0 left-0 right-0 w-full z-50",
			{ dark: isDark },
			"transition-[opacity] ease-in-out border-b border-gray-50/0 bg-white/90 backdrop-blur-md dark:bg-black/90"
		]}
		{...id ? { id } : {}}

	>
		<div 

			class:list={[
				"relative text-default py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between",
				{ "max-w-7xl": !isFullWidth }
			]}

		>
			<div class:list={[{ "mr-auto rtl:mr-0 rtl:ml-auto": position === "right" }, "flex justify-between"]}>

				<a class="flex items-center" href={getHomePermalink()}>
					<Logo />
				</a>

				<div class="flex items-center md:hidden">
					{showToggleTheme && <ToggleTheme iconClass="w-6 h-6" />}
				</div>

			</div>

			<nav
				class="items-center w-full md:w-auto hidden md:flex text-default"
				aria-label="Main navigation"
			>

				<ul class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium">
					{
						links.map(({ text, href, links }, index) => (
							<li key={index} class={links?.length ? "dropdown" : ""}>
								{links?.length ? (
									<>

										<button class="mb-6 text-muted text-xl hover:text-primary dark:hover:text-link px-4 py-3 flex items-center">
											{text} 
											<Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline" />
										</button>

										<ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">

											{links.map(({ text: text2, href: href2 }, subIndex) => (
												<li key={subIndex}>
													<a
														class:list={[
															"text-xl hover:text-primary dark:hover:text-link px-4 flex items-center",
															{ "aw-link-active": href2 === currentPath }
														]}
														href={href2}
													>
														{text2}
													</a>
												</li>
											))}

										</ul>

									</>

								) : (

									<a
										class:list={[
											"text-xl hover:text-primary dark:hover:text-link px-4 py-3 flex items-center",
											{ "aw-link-active": href === currentPath }
										]}
										href={href}
										target="_blank"
									>

										{text}
									</a>

								)}

							</li>

						))

					}

				</ul>

			</nav>

			<div
				class:list={[
					{ "ml-auto rtl:ml-0 rtl:mr-auto": position === "left" },
					"hidden md:flex mb-6"
				]}
			>

				{showToggleTheme && <ToggleTheme iconClass="w-5 h-5" />}
				
				{showRssFeed && (

					<a
						class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
						aria-label="RSS Feed"
						href={getAsset('/rss.xml')}
						target="_blank"
					>

						<Icon name="tabler:rss" class="w-5 h-5" />

					</a>

				)}

				{actions?.length ? (

					<span class="ml-4 rtl:ml-0 rtl:mr-4">
						{actions.map((btnProps, index) => (
							<Button 
								key={index} 
								{...btnProps} 
								class="ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto" 
							/>
						))}
					</span>

				) : null}

			</div>

		</div>

	</header>

</div>