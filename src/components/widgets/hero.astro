---
import type { CallToAction } from '~/types';
import Button from '~/components/ui/button.astro';
import Package from '~/components/ui/package.astro';

export interface Props {
	title?: string;
	subtitle?: string;
	tagline?: string;
	content?: string;
	actions?: string | CallToAction[];
	package?: string;

}

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	tagline,
	content = await Astro.slots.render('content'),
	actions = await Astro.slots.render('actions'),
	package: packageText,
} = Astro.props;
---

<div class="absolute inset-0 z-20 flex items-center">

	<div class="relative max-w-7xl mx-auto px-4 sm:px-6 w-full">

		<div class="lg:flex lg:items-center lg:gap-8">

			<div class="basis-1/2 text-center lg:text-left pb-10 md:pb-16 mx-auto">

				{tagline && (
					<p class="text-base text-secondary  font-bold tracking-wide uppercase" set:html={tagline} />
				)}

				{title && (<h1 set:html={title} class="text-white text-left" />)}

				<div>
					{subtitle && (
						<p class="text-xl text-white text-justify mb-6" set:html={subtitle} />
					)}

					{actions && (
						<div>
							{Array.isArray(actions) ? (
								actions.map((action, index) => (
									<div key={index} class="flex w-full sm:w-auto">
										<Button {...(action || {})} target="_blank" />
									</div>
								))
							) : (
								<Fragment set:html={actions} />
							)}
						</div>
					)}

					{packageText && (
						<div class="mt-4">
							<Package text={packageText} />
						</div>
					)}

				</div>



				{content && <Fragment set:html={content} />}

			</div>

			<div class="basis-1/2 text-center lg:text-left pb-10 md:pb-16 mx-auto"></div>

		</div>

	</div>

</div>