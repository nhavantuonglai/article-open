---
import Image from '~/components/common/image.astro';
import type { CallToAction } from '~/types';
import Button from '~/components/ui/button.astro';

export interface Props {
	title?: string;
	subtitle?: string;
	tagline?: string;
	content?: string;
	actions?: string | CallToAction[];
	image?: string | any;
	headingLevel?: 'h1' | 'h2';
}

const {
	title = await Astro.slots.render('title'),
	subtitle = await Astro.slots.render('subtitle'),
	tagline,
	content = await Astro.slots.render('content'),
	actions = await Astro.slots.render('actions'),
	image = await Astro.slots.render('image'),
	headingLevel = 'h1',
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose">
	<div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
	<div class="relative max-w-7xl mx-auto px-4 sm:px-6">

		<div class="pt-0 md:pt-[120px] pointer-events-none"></div>
		<div class="py-12 md:py-20 grid gap-6 md:grid-cols-2">
			<div class="pb-10 md:pb-16 mx-auto lg:mx-0">

				{tagline && (
					<p class="text-base text-secondary font-bold tracking-wide uppercase text-left" set:html={tagline} />
				)}

				{title && (
					<Fragment>
						{headingLevel === 'h1' ? (
							<h1 class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-6 font-heading text-left" set:html={title} />
						) : (
							<h2 class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-6 font-heading text-left" set:html={title} />
						)}
					</Fragment>
				)}

				<div class="max-w-3xl mx-auto">

					{subtitle && (
						<p class="text-xl text-justify text-muted mb-6 text-left" set:html={subtitle} />
					)}

					{actions && (
						<div class="max-w-xs sm:max-w-md flex flex-col sm:flex-row gap-4">
							{Array.isArray(actions) ? (
								actions.map((action, index) => (
									<div key={index} class="flex w-full sm:w-auto">
										<Button {...(action || {})} class="w-full sm:mb-0" target="_blank" />
									</div>
								))
							) : (
								<Fragment set:html={actions} />
							)}
						</div>
					)}

					{content && <Fragment set:html={content} />}

				</div>
			</div>

			{image && (
				<div class="pb-10 md:pb-16 mx-auto lg:mx-0">
					<div class="relative m-auto max-w-5xl">
						{typeof image === 'string' ? (
							<img
								src={image}
								alt="Văn hay trong hiện tại, chữ tốt ở tương lai."
								title="Văn hay trong hiện tại, chữ tốt ở tương lai."
								class="mx-auto rounded-md w-full object-cover"
								style="aspect-ratio: 4/3;"
							/>
						) : (
							<Image
								class="mx-auto rounded-md w-full object-cover"
								style="aspect-ratio: 4/3;"
								widths={[400, 768, 1024]}
								sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, 1024px"
								loading="eager"
								alt={image.alt}
								{...image}
							/>
						)}
					</div>
				</div>
			)}

		</div>
	</div>

	<style>
		@media (max-width: 1023px) {
			.md\:grid-cols-2 {
				grid-template-columns: 1fr;
			}
		}
	</style>

</section>