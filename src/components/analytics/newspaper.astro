<section class="relative md:-mt-[76px] not-prose">
    <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="pt-0 md:pt-[120px] pointer-events-none"></div>
        <div class="terminal mx-auto">
            <div class="window-controls">
                <div class="control-group">
                    <div class="control close"></div>
                    <div class="control minimize"></div>
                    <div class="control maximize"></div>
                </div>
                <p id="user-ip">Đang lấy địa chỉ</p>
            </div>
            <div class="command-content">
                <p class="command-line" id="output"></p>
            </div>
        </div>

        <script client:load>
            document.addEventListener("DOMContentLoaded", async () => {
                const ipElement = document.getElementById("user-ip");
                if (ipElement) {
                    ipElement.textContent = `Đang lấy địa chỉ.`;
                    try {
                        const response = await fetch("https://ipinfo.io/json?token=87aa8f284fb4f6");
                        const data = await response.json();
                        ipElement.textContent = `Địa chỉ: ${data.ip}`;
                    } catch (error) {
                        console.error(`Lỗi khi lấy địa chỉ:, error.`);
                        ipElement.textContent = `Không thể lấy địa chỉ.`;
                    }
                }
            });
        </script>
    </div>
</section>

<style>
@import url('https://cdnjs.cloudflare.com/ajax/libs/montserrat/4.7.0/css/montserrat.min.css');

* {
    box-sizing: border-box;
    font-family: 'Montserrat', sans-serif;
    margin: 0;
    padding: 0;
}

html, body {
    scrollbar-width: none;
    -ms-overflow-style: none;
    min-height: 100vh;
    color: white;
}

body::-webkit-scrollbar,
.command-line::-webkit-scrollbar {
    display: none;
}

body {
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.terminal {
    width: 100%;
    max-width: 100%;
    height: calc(100vh - 50px);
    margin: 20px auto;
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: 1rem;
    background-color: rgba(120, 120, 120, 0.2); /* Nền xám nhẹ */
    backdrop-filter: blur(8px); /* Tăng blur */
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: column;
}

.window-controls {
    height: 30px;
    padding: 0 10px;
    background: rgba(80, 80, 80, 0.3); /* Nền xám nhẹ cho window controls */
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.control-group {
    display: flex;
    gap: 6px;
}

.control {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin: 0;
}

.close { 
    background: #ff5f56;
}

.minimize { 
    background: #ffbd2e;
}

.maximize { 
    background: #27c93f;
}

#user-ip {
    font-size: 0.9rem;
    margin: 0;
    padding: 0 10px;
    color: white;
}

.command-content {
    flex: 1;
    overflow: hidden;
    padding: 10px;
}

.command-line {
    height: 100%;
    padding: 0;
    line-height: 1.5;
    overflow-y: auto;
    overflow-wrap: break-word;
    white-space: pre-wrap;
    font-size: 1rem;
    margin: 0;
    color: white;
}

p {
    text-align: justify;
}

@media screen and (max-width: 960px) {
    .hide {
        display: none;
    }
    
    .terminal {
        margin: 10px auto;
        height: calc(100vh - 20px);
    }
    
    .window-controls {
        height: 25px;
    }
    
    .control {
        width: 8px;
        height: 8px;
    }
}
</style>