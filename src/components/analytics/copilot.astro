---
import Button from '~/components/ui/button.astro';
import CTA from '~/components/widgets/services.astro';
---

<section class="relative md:-mt-[76px] not-prose">
	<div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
		<div class="pt-0 md:pt-[120px] pointer-events-none"></div>
			<h1 class="mx-auto max-w-7xl md:px-6 leading-tighter text-center text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-6 font-heading">
					Chat AI Cá Nhân
				</h1>

			<div class="mx-auto max-w-7xl md:px-6 px-4">

				<textarea id="input" placeholder="Nhập câu hỏi của bạn..." class="px-4 mb-6 py-6 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900" required></textarea>

				<button id="convert-btn" class="btn-primary w-auto mb-6">Gửi</button>

				<div id="output" class="mb-6 text-lg border border-gray-300 p-4 rounded-lg"></div>

			</div>

			<script client:load>
				document.addEventListener("DOMContentLoaded", function () {
					const buttonConvert = document.getElementById('convert-btn');
					const input = document.getElementById('input');
					const output = document.getElementById('output');

					buttonConvert.addEventListener('click', async function () {
						const inputText = input.value.trim();
						if (!inputText) {
							output.innerText = "Vui lòng nhập nội dung.";
							return;
						}

						// Cấu hình API -  Use environment variables for security
						const API_KEY = import.meta.env.VITE_API_KEY; //Get API key from .env file
						if (!API_KEY) {
							output.innerText = "API key is missing. Please configure environment variables.";
							return;
						}
						const endpoint = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${API_KEY}`;

						output.innerText = "Đang xử lý...";

						try {
							const response = await fetch(endpoint, {
								method: 'POST',
								headers: {
									'Content-Type': 'application/json',
								},
								body: JSON.stringify({
									contents: [
										{
											parts: [
												{ text: inputText }
											]
										}
									]
								})
							});

							if (!response.ok) {
								const error = await response.text(); // Get more detailed error message
								output.innerText = `Lỗi từ máy chủ: ${error}`;
								console.error('Error response:', response.status, error);
								return;
							}

							const result = await response.json();
							const aiResponse = result.candidates[0].content; // more robust path
							output.innerText = aiResponse || "Lỗi xử lý phản hồi.";

						} catch (error) {
							console.error('Error:', error);
							output.innerText = 'Lỗi kết nối với máy chủ.';
						}
					});
				});
			</script>
		</div>
</section>