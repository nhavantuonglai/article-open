---
import Hero from '~/components/widgets/hero.astro';

const title = "Công cụ kiểm tra từ điển, tra câu trực tuyến";
const subtitle = "Hướng dẫn: Công cụ kiểm tra từ điển, tra câu trực tuyến là công cụ giúp người dùng dễ dàng tìm kiếm nghĩa của từ, phát âm, ngữ pháp và nhiều thông tin liên quan.";
const placeholder = "Nhập từ cần tra cứu ở đây.";
---

<Hero
	title={title}
	subtitle={subtitle}
	id="dictionary"
	inputType="text"
	outputType="text"
	placeholder={placeholder}
	image="https://banmaixanh.vercel.app/image/cover/001-726.jpg"
/>

<script client:load>

	document.addEventListener('DOMContentLoaded', () => {

		const safeId = 'dictionary';
		const wordInput = document.getElementById(`${safeId}-input`);
		const resultOutput = document.getElementById(`${safeId}-text-output`);
		if (!wordInput || !resultOutput) return;

		let controller = new AbortController();

		const fetchDefinition = async (word) => {
			resultOutput.textContent = 'Đang tra cứu…';
			try {
				const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`, {
					signal: controller.signal
				});
				if (!response.ok) throw new Error('Từ này không có nghĩa.');

				const [data] = await response.json();
				if (!data) throw new Error('Không tìm thấy dữ liệu.');

				const meanings = data.meanings?.map(meaning => `
					<div class="mb-6">
						<strong class="text-primary">Loại từ:</strong> ${meaning.partOfSpeech}<br>
						<strong class="text-primary">Nghĩa:</strong> ${meaning.definitions.map(def => def.definition).join('; ')}
					</div>
				`).join('') || '';

				const phonetics = data.phonetics?.filter(p => p.text).map(p => p.text).join(', ') || '';
				let resultHTML = `
					<div class="border-b pb-4 mb-6">
						<strong class="text-xl">${word}</strong>
						${phonetics ? `<div class="text-gray-600">${phonetics}</div>` : ''}
					</div>
					${meanings}
				`;
				if (data.origin) {
					resultHTML += `
						<div class="mt-4 pt-4 border-t">
							<strong class="text-primary">Nguồn gốc:</strong> ${data.origin}
						</div>
					`;
				}
				resultOutput.innerHTML = resultHTML;
			} catch (error) {
				if (error.name !== 'AbortError') {
					resultOutput.textContent = error.message || 'Có lỗi xảy ra khi tra cứu.';
					console.error(error);
				}
			}
		};

		wordInput.addEventListener('input', () => {
			const word = wordInput.value.trim();
			if (!word) {
				resultOutput.textContent = 'Vui lòng nhập từ để tra cứu.';
				return;
			}
			controller.abort();
			controller = new AbortController();
			setTimeout(() => fetchDefinition(word), 500);
		});
	});

</script>