---
import Hero from '~/components/widgets/hero.astro';

const title = "Công cụ nghe đài radio FM trực tuyến";
const subtitle = "Hướng dẫn: Chọn kênh Radio FM trực tuyến mà bạn muốn nghe, công cụ sẽ tự động phát Radio trực tuyến nhanh chóng và miễn phí.";
const channels = [
	{ name: "VOV 1", url: "https://stream.vovmedia.vn/vov1" },
	{ name: "VOV 2", url: "https://stream.vovmedia.vn/vov2" },
	{ name: "VOV 3", url: "https://stream.vovmedia.vn/vov3" },
	{ name: "VOV 5", url: "https://stream.vovmedia.vn/vov5" },
	{ name: "VOV Giao Thông Hà Nội", url: "https://media.kythuatvov.vn:7025/;stream/" }
];
---

<Hero
	title={title}
	subtitle={subtitle}
	id="radio"
	inputType="button"
	outputType="audio"
	channels={channels}
	image="https://banmaixanh.vercel.app/image/cover/001-769.jpg"

/>

<script client:load>

	document.addEventListener('DOMContentLoaded', () => {

		const safeId = 'radio';
		const buttons = document.querySelectorAll(`#${safeId}-buttons button`);
		const audioPlayer = document.getElementById(`${safeId}-audio-player`);
		const audioSource = document.getElementById(`${safeId}-audio-source`);
		const statusDiv = document.getElementById(`${safeId}-status`);
		if (!audioPlayer || !audioSource || !statusDiv) return;

		let currentChannelIndex = -1;
		let statusInterval;

		const updateButtons = () => {
			buttons.forEach((btn, index) => {
				btn.classList.toggle('bg-primary', index === currentChannelIndex);
				btn.classList.toggle('text-white', index === currentChannelIndex);
			});
		};

		const updateStatus = (channelName) => {
			clearInterval(statusInterval);
			statusInterval = setInterval(() => {
				const latency = Math.floor(Math.random() * 3001);
				statusDiv.textContent = `Đang phát: ${channelName}, (độ trễ: ${latency}ms).`;
			}, 1000);
		};

		const playChannel = (index) => {
			currentChannelIndex = index;
			const channel = buttons[index];
			if (!channel?.dataset.url) {
				statusDiv.textContent = 'Kênh không hợp lệ.';
				return;
			}

			audioSource.src = channel.dataset.url;
			audioPlayer.load();
			const playPromise = audioPlayer.play();
			if (playPromise) {
				playPromise
					.then(() => {
						updateButtons();
						updateStatus(channel.innerText);
					})
					.catch(error => {
						statusDiv.textContent = 'Không thể phát kênh này. Vui lòng thử kênh khác.';
						console.error(error);
					});
			}
		};

		buttons.forEach((button, index) => {
			button.addEventListener('click', () => playChannel(index));
		});
	});

</script>