---
import { APP_BLOG } from 'nhavantuonglai:config';
import type { Post } from '~/types';

import Image from '~/components/common/image.astro';

import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';

export interface Props {
	post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image));

const truncateDescription = (text, maxWords = 30) => {
	const words = text.match(/[^\s,]+/g) || [];
	const truncated = words.slice(0, maxWords).join(' ');
	return words.length > maxWords ? truncated + '…' : truncated;
};

const truncateTitle = (description, maxLength = 60) => {
	if (description.length > maxLength) {
	return description.slice(0, maxLength) + '…';
	}
	return description;
};

---

<article class="mb-6 transition">

	<div class="relative md:h-64 bg-gray-400 dark:bg-slate-700 rounded shadow-lg mb-6">
		{
			image && (
				<a href={getPermalink(post.permalink, 'post')}>
					<Image
						src={image}
						class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700"
							width={600}
							height={407}
							widths={[600, 407]}
						alt={post.title}
						layout="cover"
						loading="lazy"
						decoding="async"
					/>
				</a>
			)
		}
	</div>

	<h3 class="mb-6 text-xl font-bold leading-tight sm:text-2xl font-heading">

		{
			!APP_BLOG?.post?.isEnabled ? (
				post.title
			) : (
				<a
					href={getPermalink(post.permalink, 'post')}
					class="hover:text-primary dark:hover:text-secondary	transition ease-in duration-200"
					target="_blank"
				>
					{truncateTitle(post.title)
				</a>
			)
		}
	</h3>

	<p class="text-justify text-muted dark:text-slate-400 text-lg">{truncateDescription(post.description)}</p>

</article>