---
export interface Props {
	heading?: string;
	description?: string;
	images?: string[];
}

const {
	heading = await Astro.slots.render('heading') || 'Tiêu đề chính của website',
	description = await Astro.slots.render('description') || 'Mô tả ngắn về website và các dịch vụ của chúng tôi',
	images = Astro.props.images || [
		'https://banmaixanh.org/image/cover/001-053.jpg',
		'https://banmaixanh.org/image/cover/001-051.jpg',
		'https://banmaixanh.org/image/cover/001-057.jpg',
	],
} = Astro.props;
---

<section class="hero min-h-screen bg-theme-primary flex items-center">

	<div class="container-width">

		<div class="grid md:grid-cols-2 gap-8 items-center">

			<div class="flex flex-col justify-center">
				<h1 class="heading-1 mb-6">{heading}</h1>
				<p class="body-text">{description}</p>
			</div>
			
			<div class="relative h-[400px] md:h-[500px] overflow-hidden rounded-lg">
				{images.map((img, index) => (
					<img
						src={img}
						alt={`Slide ${index + 1}`}
						class="slide-image absolute w-full h-auto max-h-full object-contain transition-transform duration-500"
						style={`transform: translateX(${index * 100}%)`}
					/>
				))}

			</div>

		</div>

	</div>

</section>

<script>

	let currentSlide = 0;
	const slides = document.querySelectorAll('.slide-image');

	setInterval(() => {
		currentSlide = (currentSlide + 1) % slides.length;
		slides.forEach((slide, index) => {
			slide.style.transform = `translateX(${(index - currentSlide) * 100}%)`;
		});
	}, 3000);

</script>